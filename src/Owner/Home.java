package Owner;

import UILogin.Koneksi;
import UILogin.UserProfile;
import UILogin.login;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;
import javax.swing.*;
import java.sql.PreparedStatement;
import java.util.Calendar;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;

public class Home extends javax.swing.JFrame {

    UserProfile u;

    /**
     * Creates new form OwnerPage
     */
    public Home() {
        initComponents();

        //fullscreen
        this.setExtendedState(javax.swing.JFrame.MAXIMIZED_BOTH);

    }

    public Home(UserProfile up) {
        initComponents();

        if (up != null) {
            this.u = up;
            System.out.println("Full name: " + u.getFullname());
            txtNamaProfile.setText(u.getFullname());
            txtLevel.setText(u.getLevel());
        } else {
            System.out.println("UserProfile is null");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        PanelUtama = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        txtNamaProfile = new javax.swing.JLabel();
        txtLevel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sidebar = new javax.swing.JPanel();
        btnHome = new rojeru_san.complementos.RSButtonHover();
        btnLogout1 = new rojeru_san.complementos.RSButtonHover();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabelPendapatan = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabelProdukTerlaris = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tglDari = new com.toedter.calendar.JDateChooser();
        tglSampai = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        pesan1 = new javax.swing.JPanel();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Halaman Owner");

        PanelUtama.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setBackground(new java.awt.Color(12, 139, 139));
        header.setAlignmentX(0.0F);
        header.setAlignmentY(0.0F);
        header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNamaProfile.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        txtNamaProfile.setForeground(new java.awt.Color(240, 240, 240));
        txtNamaProfile.setText("Nama");
        header.add(txtNamaProfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(1149, 25, -1, 23));

        txtLevel.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        txtLevel.setForeground(new java.awt.Color(240, 240, 240));
        txtLevel.setText("Role");
        header.add(txtLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1183, 54, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/PROFILE.png"))); // NOI18N
        header.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Poppins", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Point Of Sales");
        jLabel2.setToolTipText("");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        header.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 17, -1, -1));

        PanelUtama.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1380, 90));

        sidebar.setBackground(new java.awt.Color(51, 51, 51));
        sidebar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnHome.setBackground(new java.awt.Color(102, 102, 102));
        btnHome.setText("Home");
        btnHome.setColorHover(new java.awt.Color(102, 102, 102));
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        sidebar.add(btnHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 50));

        btnLogout1.setBackground(new java.awt.Color(255, 51, 51));
        btnLogout1.setText("LOGOUT");
        btnLogout1.setColorHover(new java.awt.Color(153, 0, 0));
        btnLogout1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout1ActionPerformed(evt);
            }
        });
        sidebar.add(btnLogout1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 580, 220, -1));

        PanelUtama.add(sidebar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 83, -1, 940));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        PanelUtama.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 220, -1));
        PanelUtama.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 140, -1, 30));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setBackground(new java.awt.Color(0, 153, 153));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Pendapatan");
        jLabel7.setOpaque(true);

        jLabelPendapatan.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabelPendapatan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPendapatan.setText("--");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelPendapatan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelPendapatan, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelUtama.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 220, -1, -1));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setBackground(new java.awt.Color(0, 153, 153));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Produk Terlaris");
        jLabel8.setOpaque(true);

        jLabelProdukTerlaris.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabelProdukTerlaris.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelProdukTerlaris.setText("--");
        jLabelProdukTerlaris.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelProdukTerlaris, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelProdukTerlaris, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelUtama.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 220, -1, -1));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setBackground(new java.awt.Color(0, 153, 153));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Produk Terjual");
        jLabel3.setOpaque(true);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("--");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                .addContainerGap())
        );

        PanelUtama.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, -1, -1));

        jLabel5.setText("Dari");
        PanelUtama.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, -1, -1));

        tglDari.setDateFormatString("y-MM-dd");
        tglDari.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tglDariPropertyChange(evt);
            }
        });
        PanelUtama.add(tglDari, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 207, -1));

        tglSampai.setDateFormatString("y-MM-dd");
        tglSampai.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tglSampaiPropertyChange(evt);
            }
        });
        PanelUtama.add(tglSampai, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 140, 207, -1));

        jLabel6.setText("Sampai");
        PanelUtama.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 110, -1, -1));

        javax.swing.GroupLayout pesan1Layout = new javax.swing.GroupLayout(pesan1);
        pesan1.setLayout(pesan1Layout);
        pesan1Layout.setHorizontalGroup(
            pesan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );
        pesan1Layout.setVerticalGroup(
            pesan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        PanelUtama.add(pesan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 440, 320, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelUtama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelUtama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("Halaman Admin");

        pack();
    }// </editor-fold>//GEN-END:initComponents

//    private void btnLoadChartActionPerformed(java.awt.event.ActionEvent evt) {                                             
//            // TODO add your handling code here:
//           SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//
//    // Periode default
//            Calendar calendar = Calendar.getInstance();
//            calendar.set(Calendar.DAY_OF_MONTH, 1);
//            String defaultDariTanggal = sdf.format(calendar.getTime());
//            String defaultSampaiTanggal = sdf.format(new Date());
//
//            // Ambil tanggal dari input
//            String dariTanggal = (tglDari.getDate() != null) ? sdf.format(tglDari.getDate()) : defaultDariTanggal;
//            String sampaiTanggal = (tglSampai.getDate() != null) ? sdf.format(tglSampai.getDate()) : defaultSampaiTanggal;
//
//            // Tampilkan Bar Chart
//            loadBarChart(lblForChart, dariTanggal, sampaiTanggal);
//        System.out.println("halooo");
//    }
//    
//    private void loadBarChart(JPanel panelChart, String dariTanggal, String sampaiTanggal) {
//            try {
//                // Buat koneksi ke database
//                Connection conn = Koneksi.Go();
//
//                // Query SQL untuk mendapatkan data kinerja kasir
//                String sql = "SELECT a.fullname, SUM(d.jumlah_produk) AS jumlah_terjual " +
//                             "FROM transaksi t " +
//                             "JOIN transaksi_detail d ON t.ID = d.transaksi_id " +
//                             "JOIN akun a ON t.id = a.id " +
//                             "WHERE t.tanggal >= ? AND t.tanggal <= ? " +
//                             "GROUP BY p.nama_lengkap";
//
//                // Eksekusi query
//                PreparedStatement stmt = conn.prepareStatement(sql);
//                stmt.setString(1, dariTanggal);
//                stmt.setString(2, sampaiTanggal);
//                ResultSet rs = stmt.executeQuery();
//
//                // Dataset untuk Bar Chart
//                DefaultCategoryDataset dataset = new DefaultCategoryDataset();
//
//                // Tambahkan data langsung ke dataset
//                while (rs.next()) {
//                    String namaKasir = rs.getString("nama_lengkap");
//                    int jumlahTerjual = rs.getInt("jumlah_terjual");
//                    dataset.addValue(jumlahTerjual, "Jumlah Terjual", namaKasir);
//                }
//
//                rs.close();
//                stmt.close();
//
//                // Buat Bar Chart
//                JFreeChart barChart = ChartFactory.createBarChart(
//                    "Kinerja Kasir",          // Judul Chart
//                    "Kasir",                 // Label Kategori (X)
//                    "Jumlah Produk Terjual", // Label Nilai (Y)
//                    dataset,                 // Dataset
//                    PlotOrientation.VERTICAL, // Orientasi Chart
//                    false,                   // Legenda
//                    true,                    // Tooltips
//                    false                    // URL
//                );
//
//                // Tambahkan Chart ke Panel
//                ChartPanel chartPanel = new ChartPanel(barChart);
//                chartPanel.setPreferredSize(new Dimension(panelChart.getWidth(), panelChart.getHeight()));
//                lblForChart.removeAll();
//                lblForChart.setLayout(new BorderLayout());
//                lblForChart.add(chartPanel, BorderLayout.CENTER);
//                lblForChart.validate();
//
//            } catch (SQLException e) {
//                JOptionPane.showMessageDialog(panelChart, "Gagal memuat data kinerja kasir!", "Error", JOptionPane.ERROR_MESSAGE);
//                e.printStackTrace();
//            }
//        }

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnLogout1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout1ActionPerformed
        this.setVisible(false);
        login l = new login();
        l.setVisible(true);
        l.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }//GEN-LAST:event_btnLogout1ActionPerformed

    private void tglDariPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tglDariPropertyChange
        getDataPenjualan();
        getPendapatan();
        getNamaProdukTerlaris();
    }//GEN-LAST:event_tglDariPropertyChange

    private void tglSampaiPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tglSampaiPropertyChange
        getDataPenjualan();
        getPendapatan();
        getNamaProdukTerlaris();
    }//GEN-LAST:event_tglSampaiPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
//                this.setExtendedState(JFrame.MAXIMIZED_BOTH);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelUtama;
    private rojeru_san.complementos.RSButtonHover btnHome;
    private rojeru_san.complementos.RSButtonHover btnLogout1;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelPendapatan;
    private javax.swing.JLabel jLabelProdukTerlaris;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pesan1;
    private javax.swing.JPanel sidebar;
    private com.toedter.calendar.JDateChooser tglDari;
    private com.toedter.calendar.JDateChooser tglSampai;
    private javax.swing.JLabel txtLevel;
    private javax.swing.JLabel txtNamaProfile;
    // End of variables declaration//GEN-END:variables

    private void getDataPenjualan() {
        Date dari = tglDari.getDate();
        Date sampai = tglSampai.getDate();

        if (dari != null && sampai != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

            String tgl_dari = sdf.format(dari);
            String tgl_sampai = sdf.format(sampai);

            String Q = "SELECT SUM(jumlah) AS n "
                    + "FROM `transaksi_detail` "
                    + "WHERE waktu_transaksi "
                    + "BETWEEN '" + tgl_dari + "' AND '" + tgl_sampai + "';";

            try {
                Connection K = UILogin.Koneksi.Go();
                Statement S = K.createStatement();
                ResultSet R = S.executeQuery(Q);
                while (R.next()) {
                    String jml = R.getString("n");
                    jLabel4.setText(jml);
                }
            } catch (SQLException e) {
            }

        }
    }

    private void getPendapatan() {
        Date dari = tglDari.getDate();
        Date sampai = tglSampai.getDate();

        if (dari != null && sampai != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

            String tgl_dari = sdf.format(dari);
            String tgl_sampai = sdf.format(sampai);

            String Q = "SELECT SUM(total) AS total_pendapatan "
                    + "FROM  transaksi_detail "
                    + "WHERE waktu_transaksi "
                    + "BETWEEN '" + tgl_dari + "' AND '" + tgl_sampai + "';";

            try {
                Connection K = UILogin.Koneksi.Go();
                Statement S = K.createStatement();
                ResultSet R = S.executeQuery(Q);
                if (R.next()) {
                    String total = R.getString("total_pendapatan");
                    jLabelPendapatan.setText("Rp. " + total != null ? total : "0");
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    private void getNamaProdukTerlaris() {
        Date dari = tglDari.getDate();
        Date sampai = tglSampai.getDate();

        if (dari != null && sampai != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

            String tgl_dari = sdf.format(dari);
            String tgl_sampai = sdf.format(sampai);

            String Q = "SELECT "
                    + "    nama_produk "
                    + "FROM "
                    + "    transaksi_detail td "
                    + "JOIN "
                    + "    produk p ON td.produk_detail_id = p.id "
                    + "WHERE "
                    + "    td.waktu_transaksi BETWEEN '" + tgl_dari + "' AND '" + tgl_sampai + "' "
                    + "GROUP BY "
                    + "    p.nama_produk "
                    + "ORDER BY "
                    + "    SUM(td.jumlah) DESC "
                    + "LIMIT 1;";

            try {
                Connection K = UILogin.Koneksi.Go();
                Statement S = K.createStatement();
                ResultSet R = S.executeQuery(Q);
                if (R.next()) {
                    String produkTerlaris = R.getString("nama_produk");
                    jLabelProdukTerlaris.setText(produkTerlaris);
                } else {
                    jLabelProdukTerlaris.setText("Tidak ada data dalam periode ini.");
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
//
//    private void updateGrafik() {
//        Date dari11 = tglDari.getDate();
//        Date sampai11 = tglSampai.getDate();
//
//        // Validasi input tanggal
//        if (dari11 == null || sampai11 == null) {
//            tampilkanPesan("Pilih rentang tanggal terlebih dahulu.");
//            return;
//        }
//
//        // Format tanggal ke format SQL
//        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//        String dariString = sdf.format(dari11);
//        String sampaiString = sdf.format(sampai11);
//
//        // Query untuk mendapatkan data grafik
//        String query =  "SELECT waktu_transaksi, "
//               + "SUM(total) AS total, "
//               + "SUM(jumlah) AS item_terjual, "
//               + "COUNT(ID) AS jumlah_transaksi "
//               + "FROM transaksi_detail "
//               + "WHERE waktu_transaksi BETWEEN ? AND ? "
//               + "GROUP BY waktu_transaksi "
//               + "ORDER BY waktu_transaksi";
//
//        try (Connection conn = Koneksi.Go(); PreparedStatement pstmt = conn.prepareStatement(query)) {
//            pstmt.setString(1, dariString);
//            pstmt.setString(2, sampaiString);
//
//            try (ResultSet rs = pstmt.executeQuery()) {
//                if (!rs.isBeforeFirst()) {
//                    tampilkanPesan("Tidak ada data untuk ditampilkan pada rentang tanggal ini.");
//                    return;
//                }
//
//                // Buat dataset dan grafik
//                CategoryDataset dataset = createDataset(rs);
//                JFreeChart chart = ChartFactory.createBarChart(
//                        "Grafik Penjualan", // Judul grafik
//                        "Tanggal", // Label sumbu X
//                        "Jumlah", // Label sumbu Y
//                        dataset, // Dataset
//                        PlotOrientation.VERTICAL, // Orientasi grafik
//                        true, // Sertakan legenda
//                        true, // Tooltips
//                        false // URL
//                );
//
//                // Tampilkan grafik di panel
//                ChartPanel chartPanel = new ChartPanel(chart);
//                Dimension panelSize = lblForChart.getSize();
//                chartPanel.setPreferredSize(panelSize); // Sesuaikan ukuran grafik dengan ukuran panel
//
//                lblForChart.removeAll();
//                lblForChart.setLayout(new BorderLayout());
//                lblForChart.add(chartPanel, BorderLayout.CENTER);
//                lblForChart.revalidate();
//                lblForChart.repaint();
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memuat grafik: " + e.getMessage(),
//                    "Error", JOptionPane.ERROR_MESSAGE);
//        }
//    }
//
//    private void tampilkanPesan(String pesanan) {
//        pesan1.removeAll();
//        JLabel label = new JLabel(pesanan, SwingConstants.CENTER);
//        pesan1.setLayout(new BorderLayout());
//        pesan1.add(label, BorderLayout.CENTER);
//        pesan1.revalidate();
//        pesan1.repaint();
//    }
//
//    private CategoryDataset createDataset(ResultSet rs) throws SQLException {
//        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
//        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
//
//        while (rs.next()) {
//            String formattedDate = dateFormat.format(rs.getDate("tanggal"));
//            dataset.addValue(rs.getDouble("total_penjualan"), "Penjualan", formattedDate);
//            dataset.addValue(rs.getInt("jumlah_transaksi"), "Jumlah Transaksi", formattedDate);
//            dataset.addValue(rs.getInt("item_terjual"), "Item Terjual", formattedDate);
//        }
//
//        return dataset;
//    }

}
